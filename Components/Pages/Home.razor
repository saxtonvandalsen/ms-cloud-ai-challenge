@page "/"
@using Azure;
@using Azure.AI.Vision.ImageAnalysis;
@using Azure.AI.OpenAI;
@using System;
@using System.IO;
@using System.Threading.Tasks;
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<h1>Computer Vision</h1>

<p>Insert URL or type prompt:</p>

<textarea @bind="urlOrPrompt" rows="1" cols="50" placeholder="Enter a URL to analyze an image"></textarea>

<div class="button-container">
    <button @onclick="Analyze">Analyze</button>
</div>

@if (!string.IsNullOrEmpty(urlOrPrompt))
{
    <img src="@urlOrPrompt" alt="Image to analyze" style="max width: 500px; max-height: 500px;" />
}

<p>@caption</p>

<style>
    .button-container {
        margin-top: 10px;
    }
</style>

@code
{
    string urlOrPrompt = "";
    string caption = "";
    void Analyze()
    {
        string endpoint = Environment.GetEnvironmentVariable("VISION_ENDPOINT");
        string key = Environment.GetEnvironmentVariable("VISION_KEY");

        ImageAnalysisClient client = new ImageAnalysisClient(
            new Uri(endpoint),
            new AzureKeyCredential(key));

        ImageAnalysisResult result = client.Analyze(
            new Uri(urlOrPrompt),
            VisualFeatures.Caption | VisualFeatures.Read,
            new ImageAnalysisOptions { GenderNeutralCaption = true });

        Console.WriteLine("Image analysis results:");
        Console.WriteLine(" Caption:");
        Console.WriteLine($"   '{result.Caption.Text}', Confidence {result.Caption.Confidence:F4}");
        caption = $"Caption: '{result.Caption.Text}', Confidence {result.Caption.Confidence:F4}";

        Console.WriteLine(" Read:");
        foreach (DetectedTextBlock block in result.Read.Blocks)
            foreach (DetectedTextLine line in block.Lines)
            {
                Console.WriteLine($"   Line: '{line.Text}', Bounding Polygon: [{string.Join(" ", line.BoundingPolygon)}]");
                foreach (DetectedTextWord word in line.Words)
                {
                    Console.WriteLine($"     Word: '{word.Text}', Confidence {word.Confidence.ToString("#.####")}, Bounding Polygon: [{string.Join(" ", word.BoundingPolygon)}]");
                }
            }
    }
}